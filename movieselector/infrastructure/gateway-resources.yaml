Parameters:
  ProjectName:
    Type: String
    Description: Name for the project

  EnvoyImage:
    Type: String

  ContainerPort:
    Type: Number
    Default: 8080

  GatewayPort:
    Type: Number
    Default: 8080

Resources:

  ###################################################
  # CloudMap Resources
  ###################################################
  MovieSelectorServiceRegistry:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: movieselector
      NamespaceId:
        Fn::ImportValue: !Sub '${ProjectName}:ServiceDiscoveryNamespace'
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 300
      HealthCheckCustomConfig:
        FailureThreshold: 1

  MovieUIServiceRegistry:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: movieui
      NamespaceId:
        Fn::ImportValue: !Sub '${ProjectName}:ServiceDiscoveryNamespace'
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 300
      HealthCheckCustomConfig:
        FailureThreshold: 1

  SixtiesMovieServerServiceRegistry:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: sixtiesmovieserver
      NamespaceId:
        Fn::ImportValue: !Sub '${ProjectName}:ServiceDiscoveryNamespace'
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 300
      HealthCheckCustomConfig:
        FailureThreshold: 1

  SeventiesMovieServerServiceRegistry:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: seventiesmovieserver
      NamespaceId:
        Fn::ImportValue: !Sub '${ProjectName}:ServiceDiscoveryNamespace'
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 300
      HealthCheckCustomConfig:
        FailureThreshold: 1

  ###################################################
  # ECS Services & Tasks
  ###################################################
  MovieAppGatewayService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        'Fn::ImportValue': !Sub "${ProjectName}:Cluster"
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 3
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - 'Fn::ImportValue': !Sub "${ProjectName}:ContainerSecurityGroup"
          Subnets:
            - 'Fn::ImportValue': !Sub "${ProjectName}:PrivateSubnet1"
            - 'Fn::ImportValue': !Sub "${ProjectName}:PrivateSubnet2"
      TaskDefinition: !Ref MovieAppGatewayTaskDef
      LoadBalancers:
        - ContainerName: envoy
          ContainerPort: !Ref GatewayPort
          TargetGroupArn:
            'Fn::ImportValue': !Sub "${ProjectName}:TargetGroup"

  MovieAppGatewayTaskDef:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: 256
      Memory: 512
      TaskRoleArn:
        'Fn::ImportValue': !Sub "${ProjectName}:TaskRole"
      ExecutionRoleArn:
        Fn::ImportValue: !Sub "${ProjectName}:ExecutionRole"
      ContainerDefinitions:
        - Name: envoy
          Image: !Ref EnvoyImage
          Essential: true
          Ulimits:
            - Name: nofile
              HardLimit: 15000
              SoftLimit: 15000
          PortMappings:
            - ContainerPort: 9901
              Protocol: tcp
            - ContainerPort: !Ref GatewayPort
              Protocol: tcp
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:9901/ready
            Interval: 5
            Timeout: 10
            Retries: 10
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Fn::ImportValue: !Sub "${ProjectName}:CWLogGroup"
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: gateway
          #DockerLabels:
          #  ECS_PROMETHEUS_METRICS_PATH: /stats/prometheus
          #  ECS_PROMETHEUS_EXPORTER_PORT: 9901
          Environment:
            - Name: ENVOY_LOG_LEVEL
              Value: debug
            #- Name: APPMESH_METRIC_EXTENSION_VERSION
            #  Value: 1
            - Name: APPMESH_RESOURCE_ARN
              Value: !Ref MovieAppGateway

  ###################################################
  # App Mesh
  ###################################################
  MovieAppGateway:
    Type: AWS::AppMesh::VirtualGateway
    Properties:
      MeshName: !Sub "${ProjectName}"
      VirtualGatewayName: gateway
      Spec:
        Listeners:
          - PortMapping:
              Port: !Ref GatewayPort
              Protocol: http

  MovieAppGatewaySelectorRoute:
    Type: AWS::AppMesh::GatewayRoute
    Properties:
      MeshName: !Sub "${ProjectName}"
      VirtualGatewayName: !GetAtt MovieAppGateway.VirtualGatewayName
      GatewayRouteName: gateway-movieselector
      Spec:
        HttpRoute:
          Match:
            Prefix: /api
          Action:
            Target:
              VirtualService:
                VirtualServiceName: !GetAtt MovieSelectorVirtualService.VirtualServiceName

  MovieAppGatewayUIRoute:
    Type: AWS::AppMesh::GatewayRoute
    Properties:
      MeshName: !Sub "${ProjectName}"
      VirtualGatewayName: !GetAtt MovieAppGateway.VirtualGatewayName
      GatewayRouteName: gateway-movieui
      Spec:
        HttpRoute:
          Match:
            Prefix: /
          Action:
            Target:
              VirtualService:
                VirtualServiceName: !GetAtt MovieUIVirtualService.VirtualServiceName

  MovieSelectorVirtualService:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName: !Sub "${ProjectName}"
      VirtualServiceName: !Sub '${MovieSelectorServiceRegistry.Name}.${ProjectName}.local'
      Spec:
        Provider:
          VirtualRouter:
            VirtualRouterName: !GetAtt MovieSelectorVirtualRouter.VirtualRouterName

  MovieSelectorVirtualRouter:
    Type: AWS::AppMesh::VirtualRouter
    Properties:
      MeshName: !Sub "${ProjectName}"
      VirtualRouterName: movieselector-vr
      Spec:
        Listeners:
          - PortMapping:
              Port: !Ref ContainerPort
              Protocol: http

  MovieUIVirtualService:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName: !Sub "${ProjectName}"
      VirtualServiceName: !Sub '${MovieUIServiceRegistry.Name}.${ProjectName}.local'
      Spec:
        Provider:
          VirtualRouter:
            VirtualRouterName: !GetAtt MovieUIVirtualRouter.VirtualRouterName

  MovieUIVirtualRouter:
    Type: AWS::AppMesh::VirtualRouter
    Properties:
      MeshName: !Sub "${ProjectName}"
      VirtualRouterName: movieui-vr
      Spec:
        Listeners:
          - PortMapping:
              Port: 80
              Protocol: http

  SixtiesMovieServerVirtualService:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName: !Sub "${ProjectName}"
      VirtualServiceName: !Sub '${SixtiesMovieServerServiceRegistry.Name}.${ProjectName}.local'
      Spec:
        Provider:
          VirtualRouter:
            VirtualRouterName: !GetAtt SixtiesMovieServerVirtualRouter.VirtualRouterName

  SixtiesMovieServerVirtualRouter:
    Type: AWS::AppMesh::VirtualRouter
    Properties:
      MeshName: !Sub "${ProjectName}"
      VirtualRouterName: sixtiesmovieserver-vr
      Spec:
        Listeners:
          - PortMapping:
              Port: !Ref ContainerPort
              Protocol: http

  SeventiesMovieServerVirtualService:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName: !Sub "${ProjectName}"
      VirtualServiceName: !Sub '${SeventiesMovieServerServiceRegistry.Name}.${ProjectName}.local'
      Spec:
        Provider:
          VirtualRouter:
            VirtualRouterName: !GetAtt SeventiesMovieServerVirtualRouter.VirtualRouterName

  SeventiesMovieServerVirtualRouter:
    Type: AWS::AppMesh::VirtualRouter
    Properties:
      MeshName: !Sub "${ProjectName}"
      VirtualRouterName: seventiesmovieserver-vr
      Spec:
        Listeners:
          - PortMapping:
              Port: !Ref ContainerPort
              Protocol: http

Outputs:
  Backend1Name:
    Value: !GetAtt SixtiesMovieServerVirtualService.VirtualServiceName
    Export:
      Name: !Sub "${ProjectName}:Backend1Name"

  Backend2Name:
    Value: !GetAtt SeventiesMovieServerVirtualService.VirtualServiceName
    Export:
      Name: !Sub "${ProjectName}:Backend2Name"

  ARNOfMovieSelectorServiceRegistryEntry:
    Value: !GetAtt MovieSelectorServiceRegistry.Arn
    Export:
      Name: !Sub "${ProjectName}:ARNOfMovieSelectorServiceRegistryEntry"

  ARNOfMovieUIServiceRegistryEntry:
    Value: !GetAtt MovieUIServiceRegistry.Arn
    Export:
      Name: !Sub "${ProjectName}:ARNOfMovieUIServiceRegistryEntry"

  ARNOfSixtiesMovieServerServiceRegistryEntry:
    Value: !GetAtt SixtiesMovieServerServiceRegistry.Arn
    Export:
      Name: !Sub "${ProjectName}:ARNOfSixtiesMovieServerServiceRegistryEntry"

  ARNOfSeventiesMovieServerServiceRegistryEntry:
    Value: !GetAtt SeventiesMovieServerServiceRegistry.Arn
    Export:
      Name: !Sub "${ProjectName}:ARNOfSeventiesMovieServerServiceRegistryEntry"
